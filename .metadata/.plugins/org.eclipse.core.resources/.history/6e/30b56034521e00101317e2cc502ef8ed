#include "Hardware_Tests.h"

//Standard C includes
#include <stdio.h>
#include <inttypes.h>
#include <stdarg.h>
#include <string.h>

//Parameter used to pass arguments into the *testFunction passed to runTest
typedef struct{
	int* arg1;
	int* arg2;
	int* arg3;
} argsContext;



//Function to delete characters based on backspaces in string .
void handleBackspaces(char* stringWithBackspaces){

	//keeps track of current character index of formatted string
	int formattedStringLength = 0;

	//iterate through input string and remove characters based on backspaces in the input string
	int charIndex = 0;
	while(stringWithBackspaces[charIndex] != '\0'){
		if(stringWithBackspaces[charIndex] == '\b' && formattedStringLength > 0){
			formattedStringLength--;
		}
		else if (stringWithBackspaces[charIndex] != '\b'){
		    stringWithBackspaces[formattedStringLength] = stringWithBackspaces[charIndex];
		    formattedStringLength++;
		}
		charIndex++;
	}

	//end string with null terminator
	stringWithBackspaces[formattedStringLength] = '\0';
}

//validates that a given parameter is within the given range for test mode 8, and outputs an error on the terminal given a bad value
int validateParam(int param, int RangeLow, int RangeHigh){
	if(param < RangeLow || param > RangeHigh){
    	printf("\033[14;80H");
    	printf("Value:   \033[K%d INVALID (RANGE: %d - %d)", param, RangeLow, RangeHigh);
		return 0;
	}
	return 1;
}


void TestMode1(){
	////////////////////////////////////////////////////////////////////
	// Test Mode 1 Begin
	// Edge mounted LEDs will cycle
    clearTerminal();
    printf("Test Mode 1: Cycle Status LEDs.\n\n");

	for(int i = 1; i <= 0x8; i <<= 1){
		setLEDStatus(i);
		printf("\033[3;1H");
		printf("LED 1: %s\n", i == 0x1 ? "ON " : "OFF");
		printf("LED 2: %s\n", i == 0x2 ? "ON " : "OFF");
		printf("LED 3: %s\n", i == 0x4 ? "ON " : "OFF");
		printf("LED 4: %s\n", i == 0x8 ? "ON " : "OFF");
		sleep(1);
	}
	for(int i = 8; i >= 0x1; i >>= 1){
		setLEDStatus(i);
		printf("\033[3;1H");
		printf("LED 1: %s\n", i == 0x1 ? "ON " : "OFF");
		printf("LED 2: %s\n", i == 0x2 ? "ON " : "OFF");
		printf("LED 3: %s\n", i == 0x4 ? "ON " : "OFF");
		printf("LED 4: %s\n", i == 0x8 ? "ON " : "OFF");
		sleep(1);
	}

    printf("Test Mode 1 End.\n");
	// Test Mode 1 End
	////////////////////////////////////////////////////////////////////
}

void TestMode2(uint32_t delay){
	////////////////////////////////////////////////////////////////////
	// Test Mode 2 Begin
	// Set all pins to digital mode, and cycle each pin between ON and OFF
    //
	clearTerminal();


    printf("Test Mode 2 End.\n");
    sleep(1);
	// Test Mode 2 End
	////////////////////////////////////////////////////////////////////
}

void TestMode3(uint32_t runTime){
	////////////////////////////////////////////////////////////////////
	// Test Mode 3 Begin
	// Read IO Test
	clearTerminal();


    printf("Test Mode 3 End.\n");
	// Test Mode 3 End
	////////////////////////////////////////////////////////////////////
}

void TestMode4(uint32_t runTime){
	////////////////////////////////////////////////////////////////////
	// Test Mode 4 Begin
	// LSDAC Triangle Wave Test

	clearTerminal();


    printf("Test Mode 4 End.\n");
	// Test Mode 4 End
	////////////////////////////////////////////////////////////////////
}

void TestMode5(uint32_t runTime){
	////////////////////////////////////////////////////////////////////
	// Test Mode 5 Begin
	// LSDAC Fast Square Wave Test

	clearTerminal();


    printf("Test Mode 5 End.\n");
	// Test Mode 5 End
	////////////////////////////////////////////////////////////////////
}

void TestMode6(uint32_t runTime){
	////////////////////////////////////////////////////////////////////
	// Test Mode 6 Begin
	// HS ADC/DAC loopback test for channel A

	clearTerminal();



	// Test Mode 6 End
	////////////////////////////////////////////////////////////////////
}

void TestMode7(uint32_t runTime){
	////////////////////////////////////////////////////////////////////
	// Test Mode 7 Begin
	// HS ADC/DAC loopback test for channel B

	// Test Mode 7 End
	////////////////////////////////////////////////////////////////////
}

void TestMode8(){
	////////////////////////////////////////////////////////////////////
	// Test Mode 8 Begin
	// HS DAC output test

	clearTerminal();


	// Test Mode 8 End
	////////////////////////////////////////////////////////////////////
}
